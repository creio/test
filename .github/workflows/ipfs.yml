name: IPFS Deploy
on:
  push:
    branches:
      - main
  repository_dispatch:
    types: deploy

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout branch
      uses: actions/checkout@master
    - name: Save built site for deployment
      uses: actions/upload-artifact@v2
      with:
        name: public
        path: ./

  deploy-ipfs:
    runs-on: ubuntu-latest
    needs: build
    env:
      NPM_PACKAGES: .npm_packages
      NETLIFY_KEY: ${{secrets.NETLIFY_API_KEY}}
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
      - name: Setup non-root `npm install -g`
        run: |
          mkdir ~/$NPM_PACKAGES
          npm config set prefix ~/$NPM_PACKAGES
      - name: Update PATH
        uses: myci-actions/export-env-var@1
        with:
          name: PATH
          value: $PATH:$HOME/$NPM_PACKAGES/bin
      - name: Restore cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/${{ env.NPM_PACKAGES }}
          key: ${{ runner.os }}-ipfs-deploy
      - name: Install ipfs-deploy
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install -g ipfs-deploy
      - name: Download saved site
        uses: actions/download-artifact@v2
        with:
          name: public
          path: public
      - name: Run ipfs-deploy,
        run: |
          [[ -f ipfshash ]] || touch ipfshash
          old_ipfs_hash=$(cat ipfshash)
          ipfs-deploy -C -O -p infura public > ipfshash
          new_ipfs_hash=$(cat ipfshash)
          [[ "$old_ipfs_hash" == "$new_ipfs_hash" ]] && echo $old_ipfs_hash && exit
          sh ndns.sh $new_ipfs_hash $NETLIFY_KEY

  delete-artifacts:
    runs-on: ubuntu-latest
    if: always()
    needs:
    - deploy-ipfs
    steps:
      - name: Delete saved build artifacts
        uses: GeekyEggo/delete-artifact@v1.0.0
        with:
          name: public
          failOnError: false
